{"version":3,"sources":["components/Layout.js","firestore/firestore-config.js","pages/CreateNote.js","components/NoteCard.js","pages/Notes.js","App.js","reportWebVitals.js","index.js"],"names":["drawerWidth","useStyles","makeStyles","theme","root","display","appbar","breakpoints","up","width","marginLeft","drawer","flexShrink","drawerPaper","backgroundColor","toolbar","mixins","page","flexGrow","padding","spacing","SpeedDial","paths","text","path","icon","Layout","children","useState","open","setOpen","classes","history","useHistory","today","format","Date","className","AppBar","color","elevation","position","Toolbar","Typography","variant","Hidden","xsDown","implementation","Drawer","anchor","paper","style","margin","align","Divider","List","map","ListItem","button","onClick","push","ListItemIcon","ListItemText","primary","ariaLabel","SpeedDialIcon","onClose","onOpen","pth","SpeedDialAction","tooltipTitle","app","firebase","initializeApp","apiKey","authDomain","projectId","dbStore","firestore","CreateNote","props","title","setTitle","content","setContent","category","setCategory","field","marginBottom","noValidate","onSubmit","e","newTask","preventDefault","collection","add","then","ref","catch","error","console","TextField","fullWidth","id","label","onChange","target","value","required","multiline","rows","FormControl","FormLabel","RadioGroup","name","FormControlLabel","control","Radio","Button","type","endIcon","avatar","note","purple","yellow","green","blue","NoteCard","handleDelete","Card","CardHeader","Avatar","toUpperCase","subheader","action","IconButton","DeleteOutlined","CardContent","breakpointColumnsObj","default","Notes","notes","setNotes","isLoading","setIsLoading","a","doc","delete","log","newNotes","filter","useEffect","get","docs","ntes","forEach","data","breakpointCols","columnClassName","length","createTheme","App","ThemeProvider","exact","component","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2c4c5a15.chunk.js","sourcesContent":["import {\n  AppBar,\n  Divider,\n  Drawer,\n  Hidden,\n  List,\n  ListItem,\n  Toolbar,\n  Typography,\n} from \"@material-ui/core\";\nimport SpeedDial from \"@material-ui/lab/SpeedDial\";\nimport SpeedDialIcon from \"@material-ui/lab/SpeedDialIcon\";\nimport SpeedDialAction from \"@material-ui/lab/SpeedDialAction\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport BallotIcon from \"@material-ui/icons/Ballot\";\nimport NoteAddIcon from \"@material-ui/icons/NoteAdd\";\nimport React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { format } from \"date-fns\";\nimport { useState } from \"react\";\n\nconst drawerWidth = 200;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  appbar: {\n    [theme.breakpoints.up(\"sm\")]: {\n      width: `calc(100% - ${drawerWidth}px)`,\n      marginLeft: drawerWidth,\n    },\n  },\n  drawer: {\n    [theme.breakpoints.up(\"sm\")]: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n  },\n  drawerPaper: {\n    width: drawerWidth,\n    backgroundColor: \"#f9f9f9\",\n  },\n  toolbar: theme.mixins.toolbar,\n  page: {\n    // width: \"100%\",\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n  SpeedDial: {\n    [theme.breakpoints.up(\"sm\")]: {\n      display: \"none\",\n    },\n    position: \"fixed\",\n    bottom: theme.spacing(2),\n    right: theme.spacing(2),\n  },\n}));\n\nconst paths = [\n  {\n    text: \"Notes\",\n    path: \"/\",\n    icon: <BallotIcon />,\n  },\n  {\n    text: \"Create\",\n    path: \"/create\",\n    icon: <NoteAddIcon />,\n  },\n];\n\nconst Layout = ({ children }) => {\n  const [open, setOpen] = useState(false);\n  const classes = useStyles();\n  const history = useHistory();\n  const today = format(new Date(), \"do MMMM yyy\");\n\n  return (\n    <>\n      <div className={classes.root}>\n        <AppBar\n          color=\"inherit\"\n          elevation={0}\n          position=\"fixed\"\n          className={classes.appbar}\n        >\n          <Toolbar>\n            <Typography variant=\"body2\">{today}</Typography>\n          </Toolbar>\n        </AppBar>\n        <Hidden xsDown implementation=\"css\">\n          <Drawer\n            color=\"default\"\n            className={classes.drawer}\n            variant=\"permanent\"\n            anchor=\"left\"\n            classes={{ paper: classes.drawerPaper }}\n          >\n            <Typography\n              color=\"textSecondary\"\n              style={{ margin: 15 }}\n              align=\"center\"\n              variant=\"h6\"\n            >\n              Note - i - fy\n            </Typography>\n            <Divider />\n            <List>\n              {paths.map((path) => (\n                <ListItem\n                  button\n                  onClick={() => history.push(path.path)}\n                  key={path.text}\n                >\n                  <ListItemIcon>{path.icon}</ListItemIcon>\n                  <ListItemText primary={path.text} />\n                </ListItem>\n              ))}\n            </List>\n          </Drawer>\n        </Hidden>\n        <main className={classes.page}>\n          <div className={classes.toolbar} />\n          {children}\n        </main>\n      </div>\n      <SpeedDial\n        ariaLabel=\"speed dial\"\n        className={classes.SpeedDial}\n        icon={<SpeedDialIcon />}\n        onClose={() => setOpen(false)}\n        onOpen={() => setOpen(true)}\n        open={open}\n      >\n        {paths.map((pth) => (\n          <SpeedDialAction\n            key={pth.text}\n            icon={pth.icon}\n            tooltipTitle={pth.text}\n            onClick={() => history.push(pth.path)}\n          />\n        ))}\n      </SpeedDial>\n    </>\n  );\n};\n\nexport default Layout;\n","import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyC3310P_ffv62XO8aL_Od15GPU3JDcF6cQ\",\n  authDomain: \"apione-8a4f9.firebaseapp.com\",\n  projectId: \"apione-8a4f9\",\n};\n\nconst app = firebase.initializeApp(firebaseConfig);\n\nconst dbStore = firebase.firestore(app);\n\nexport { dbStore };\n","import {\n  TextField,\n  RadioGroup,\n  FormControl,\n  FormControlLabel,\n  Radio,\n  FormLabel,\n} from \"@material-ui/core\";\nimport { Button } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core\";\nimport KeyboardArrowRightIcon from \"@material-ui/icons/KeyboardArrowRight\";\nimport React from \"react\";\nimport { useState } from \"react\";\nimport { dbStore } from \"../firestore/firestore-config\";\n\nconst CreateNote = (props) => {\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [category, setCategory] = useState(\"todo\");\n\n  const useStyles = makeStyles({\n    field: {\n      display: \"block\",\n      marginBottom: 20,\n    },\n  });\n  const classes = useStyles();\n  const addTask = (newTask) => {\n    dbStore\n      .collection(\"notes\")\n      .add(newTask)\n      .then((ref) => props.history.push(\"/\"))\n      .catch((error) => {\n        console.error(\"Error\", error)\n      })\n    // fetch(\"http://localhost:8000/tasks\", {\n    //   method: \"POST\",\n    //   headers: { \"content-type\": \"application/json\" },\n    //   body: JSON.stringify(newTask),\n    // }).then(() => props.history.push(\"/\"));\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (title && content) {\n      addTask({ title, category, content });\n    }\n  };\n  return (\n    <div>\n      <form noValidate onSubmit={handleSubmit}>\n        <TextField\n          className={classes.field}\n          fullWidth\n          id=\"title\"\n          label=\"title\"\n          variant=\"outlined\"\n          onChange={(e) => setTitle(e.target.value)}\n          value={title}\n          required\n        />\n        <TextField\n          className={classes.field}\n          fullWidth\n          multiline\n          rows={3}\n          id=\"content\"\n          label=\"details\"\n          variant=\"outlined\"\n          onChange={(e) => setContent(e.target.value)}\n          value={content}\n        />\n        <FormControl className={classes.field}>\n          <FormLabel>Type of note</FormLabel>\n          <RadioGroup\n            name=\"category\"\n            value={category}\n            onChange={(e) => setCategory(e.target.value)}\n          >\n            <FormControlLabel value=\"work\" control={<Radio />} label=\"work\" />\n            <FormControlLabel value=\"todo\" control={<Radio />} label=\"todo\" />\n            <FormControlLabel\n              value=\"reminder\"\n              control={<Radio />}\n              label=\"reminder\"\n            />\n          </RadioGroup>\n        </FormControl>\n        <Button\n          type=\"submit\"\n          color=\"primary\"\n          variant=\"contained\"\n          endIcon={<KeyboardArrowRightIcon />}\n        >\n          Submit\n        </Button>\n      </form>\n    </div>\n  );\n};\n\nexport default CreateNote;\n","import { Avatar, Divider, IconButton, makeStyles, Typography } from \"@material-ui/core\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport React from \"react\";\nimport { DeleteOutlined } from \"@material-ui/icons\";\nimport { blue, green, purple, yellow } from \"@material-ui/core/colors\";\n\nconst useStyles = makeStyles({\n  avatar: {\n    backgroundColor: (note) => {\n      if(note.category === 'reminder'){\n        return purple[500]\n      }\n      if(note.category === 'todo'){\n        return yellow[700]\n      }\n      if(note.category === 'work'){\n        return green[500]\n      }\n      return blue[500]\n    }\n  }\n})\n\nexport default function NoteCard({ note, handleDelete }) {\n  const classes = useStyles(note);\n  return (\n    <Card elevation={3}>\n      <CardHeader\n        avatar={\n          <Avatar className={classes.avatar}>\n            {note.category[0].toUpperCase()}\n          </Avatar>\n        }\n        title={note.title}\n        subheader={note.category}\n        action={\n          <IconButton onClick={() => handleDelete(note.id)}>\n            <DeleteOutlined />\n          </IconButton>\n        }\n      />\n      <Divider />\n      <CardContent>\n        <Typography variant=\"body2\">{note.content}</Typography>\n      </CardContent>\n    </Card>\n    // <Grid item xs={12} sm={6} md={4} key={note.id}>\n    //   <Typography>{note.title}</Typography>\n    //   <Typography>{note.content}</Typography>\n    // </Grid>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport NoteCard from \"../components/NoteCard\";\nimport Masonry from \"react-masonry-css\";\nimport { dbStore } from \"../firestore/firestore-config\";\nimport { Typography } from \"@material-ui/core\";\n\nconst breakpointColumnsObj = {\n  default: 3,\n  1100: 2,\n  800: 2,\n  700: 1,\n};\n\nfunction Notes() {\n  const [notes, setNotes] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const handleDelete = async (id) => {\n    await dbStore\n      .collection(\"notes\")\n      .doc(id)\n      .delete()\n      .then(() => {\n        console.log(\"doc successfully deleted\");\n      })\n      .catch((error) => {\n        console.log(\"Error\", error);\n      });\n    // await fetch(\"http://localhost:8000/tasks/\" + id, {\n    //   method: \"DELETE\",\n    // });\n    let newNotes = notes.filter((note) => note.id !== id);\n    setNotes(newNotes);\n  };\n\n  useEffect(() => {\n    console.log(\"useEffect init!\");\n    setIsLoading(true);\n    dbStore\n      .collection(\"notes\")\n      .get()\n      .then((docs) => {\n        let ntes = [];\n        docs.forEach((doc) => {\n          ntes.push({ ...doc.data(), id: doc.id });\n        });\n        setNotes(ntes);\n        setIsLoading(false);\n      })\n      .catch(() => setIsLoading(false))\n  }, []);\n\n  if (isLoading) {\n    return <Typography variant=\"h5\">Loading</Typography>;\n  } else {\n    return (\n      <Masonry\n        breakpointCols={breakpointColumnsObj}\n        className=\"my-masonry-grid\"\n        columnClassName=\"my-masonry-grid_column\"\n      >\n        {notes.length > 0 ? (\n          notes.map((note) => (\n            <NoteCard key={note.id} note={note} handleDelete={handleDelete} />\n          ))\n        ) : (\n          <Typography align=\"center\">No notes to display!</Typography>\n        )}\n      </Masonry>\n    );\n  }\n}\n\nexport default Notes;\n","import { createTheme, ThemeProvider } from \"@material-ui/core\";\nimport React, { Component } from \"react\";\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\nimport Layout from \"./components/Layout\";\nimport CreateNote from \"./pages/CreateNote\";\nimport Notes from \"./pages/Notes\";\n\nconst theme = createTheme();\n\nexport default class App extends Component {\n  render() {\n    return (\n      <ThemeProvider theme={theme}>\n        <HashRouter>\n          <Layout>\n            <Switch>\n              <Route exact path=\"/\" component={Notes} />\n              <Route path=\"/create\" component={CreateNote} />\n            </Switch>\n          </Layout>\n        </HashRouter>\n      </ThemeProvider>\n    );\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}